

# This file was *autogenerated* from the file solver.sage
from sage.all_cmdline import *   # import sage library

_sage_const_62146958366026142673099181212004854928889458621353956380092578589084587352132050600698322176547209 = Integer(62146958366026142673099181212004854928889458621353956380092578589084587352132050600698322176547209); _sage_const_30779678358545190464054488513057708332020554437538179828946732915211560427490845376418082927243013 = Integer(30779678358545190464054488513057708332020554437538179828946732915211560427490845376418082927243013); _sage_const_14337049025908639619746478656374815592411550665695554327935944374039544695245058124036987993585799 = Integer(14337049025908639619746478656374815592411550665695554327935944374039544695245058124036987993585799); _sage_const_38886361482869005117287607792428930853805083904460072910113145656459082732569562694139171365042072 = Integer(38886361482869005117287607792428930853805083904460072910113145656459082732569562694139171365042072); _sage_const_51558507349137883147321891965487026648232854867265808781766663125620158671007497326653466994401234 = Integer(51558507349137883147321891965487026648232854867265808781766663125620158671007497326653466994401234); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_62146958366026142673099181212004854928889458621351433594244709969547743803416744797667323204465061 = Integer(62146958366026142673099181212004854928889458621351433594244709969547743803416744797667323204465061); _sage_const_76265702241678458327876347722418132023514871813948025328320 = Integer(76265702241678458327876347722418132023514871813948025328320); _sage_const_12941188091079133293420798926863808709935614646827505023565236685277354158136345650130420238270664 = Integer(12941188091079133293420798926863808709935614646827505023565236685277354158136345650130420238270664); _sage_const_34356083472979662547428487200756089615312904133201314736152132832564696714960780146095933041910387 = Integer(34356083472979662547428487200756089615312904133201314736152132832564696714960780146095933041910387); _sage_const_678248957663 = Integer(678248957663); _sage_const_556163531687 = Integer(556163531687); _sage_const_786510851681 = Integer(786510851681); _sage_const_800156883013 = Integer(800156883013); _sage_const_1098806038621 = Integer(1098806038621); _sage_const_0 = Integer(0)
from Crypto.Util.number import long_to_bytes as l2b
p = _sage_const_62146958366026142673099181212004854928889458621353956380092578589084587352132050600698322176547209 


x1,y1=(_sage_const_30779678358545190464054488513057708332020554437538179828946732915211560427490845376418082927243013  , _sage_const_14337049025908639619746478656374815592411550665695554327935944374039544695245058124036987993585799  )

x2,y2=(_sage_const_38886361482869005117287607792428930853805083904460072910113145656459082732569562694139171365042072  , _sage_const_51558507349137883147321891965487026648232854867265808781766663125620158671007497326653466994401234  )


a=((y1**_sage_const_2 -y2**_sage_const_2 ) - (x1**_sage_const_3 -x2**_sage_const_3 ))*pow(x1-x2,-_sage_const_1 ,p)%p


b=(y1**_sage_const_2 -x1**_sage_const_3 -a*x1 )%p

print(a,b)
ordd=_sage_const_62146958366026142673099181212004854928889458621351433594244709969547743803416744797667323204465061 
E = EllipticCurve(GF(p), [a, b])
result=_sage_const_76265702241678458327876347722418132023514871813948025328320 
enc=E(x2,y2)

#G=E.gen(0)[0]
G=E(_sage_const_12941188091079133293420798926863808709935614646827505023565236685277354158136345650130420238270664  ,_sage_const_34356083472979662547428487200756089615312904133201314736152132832564696714960780146095933041910387 )
#ordd=E.order()
ordd=_sage_const_62146958366026142673099181212004854928889458621351433594244709969547743803416744797667323204465061 
Q=E(x1,y1)
#factors, exponents = zip(*factor(ordd))
#primes_all = [factors[i] ^ exponents[i] for i in range(len(factors))]
#primes = primes_all[:-1]
primes=[_sage_const_678248957663 , _sage_const_556163531687 , _sage_const_786510851681 , _sage_const_800156883013 , _sage_const_1098806038621 ]
print(primes)
dlogs = []
for fac in primes:
    print("t")
    t = int(ordd) // int(fac)
    print("dlog")
    QQ=t*Q
    GG=t*G
    dlog = QQ.log(GG)
    dlogs += [dlog]
    print("factor: "+str(fac)+", Discrete Log: "+str(dlog)) #calculates discrete logarithm for each prime order

result = crt(dlogs,primes)
print(G==Q*result)
print(Q==G*result)
enc=E(x2,y2)
print(l2b(int((enc*result)[_sage_const_0 ])))
print(l2b(int((enc*pow(result,-_sage_const_1 ,ordd))[_sage_const_0 ])))


print(result)


